"use strict";(self.webpackChunk_pamfilico_feedback=self.webpackChunk_pamfilico_feedback||[]).push([[787],{"./src/material/DesktopEditFeedbackComponent.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DesktopEditFeedbackComponent_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),dynamic=__webpack_require__("./node_modules/next/dynamic.js"),dynamic_default=__webpack_require__.n(dynamic),Paper=__webpack_require__("./node_modules/@mui/material/esm/Paper/Paper.js"),Typography=__webpack_require__("./node_modules/@mui/material/esm/Typography/Typography.js"),Box=__webpack_require__("./node_modules/@mui/material/esm/Box/Box.js"),Button=__webpack_require__("./node_modules/@mui/material/esm/Button/Button.js"),FormControl=__webpack_require__("./node_modules/@mui/material/esm/FormControl/FormControl.js"),InputLabel=__webpack_require__("./node_modules/@mui/material/esm/InputLabel/InputLabel.js"),Select=__webpack_require__("./node_modules/@mui/material/esm/Select/Select.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/esm/MenuItem/MenuItem.js"),TextField=__webpack_require__("./node_modules/@mui/material/esm/TextField/TextField.js"),formik_esm=__webpack_require__("./node_modules/formik/dist/formik.esm.js"),index_esm=__webpack_require__("./node_modules/yup/index.esm.js"),axios=__webpack_require__("./node_modules/axios/lib/axios.js"),dist=__webpack_require__("./node_modules/react-hot-toast/dist/index.mjs"),console=__webpack_require__("./node_modules/console-browserify/index.js");const CanvasDraw=dynamic_default()(()=>__webpack_require__.e(716).then(__webpack_require__.bind(__webpack_require__,"./node_modules/react-canvas-draw/es/index.js")),{loadableGenerated:{webpack:()=>["./node_modules/react-canvas-draw/es/index.js"]},ssr:!1,loading:()=>(0,jsx_runtime.jsx)("div",{children:"Loading canvas..."})}),validationSchema=index_esm.Ik({feedbackType:index_esm.Yj().required("Feedback type is required"),description:index_esm.Yj().min(10,"Description should be at least 10 characters long").required("Description is required")});function DesktopEditFeedbackComponent({feedback,onUpdate,onCancel,editingUrl,additionalHeaders={}}){const[image,setImage]=(0,react.useState)(""),canvasRef=(0,react.useRef)(null),[dimensions,setDimensions]=(0,react.useState)({width:800,height:600}),[savedDrawingData,setSavedDrawingData]=(0,react.useState)(null);(0,react.useEffect)(()=>{{const newDimensions={width:Math.floor(.6*window.innerWidth),height:Math.floor(.8*window.innerHeight)};setDimensions(newDimensions)}},[]),(0,react.useEffect)(()=>{if(feedback&&(feedback.image&&setImage(feedback.image),formik.setValues({feedbackType:feedback.type_of||"",description:feedback.message||""}),feedback.drawings)){let parsedDrawings=feedback.drawings;if("string"==typeof feedback.drawings)try{parsedDrawings=JSON.parse(feedback.drawings)}catch(e){console.error("Failed to parse drawings:",e),parsedDrawings=null}if(parsedDrawings){let saveDataString;if(parsedDrawings.lines&&parsedDrawings.width&&parsedDrawings.height)saveDataString=JSON.stringify(parsedDrawings);else if(Array.isArray(parsedDrawings)){const drawingsData={lines:parsedDrawings,width:dimensions.width,height:dimensions.height};saveDataString=JSON.stringify(drawingsData)}saveDataString&&setSavedDrawingData(saveDataString)}}},[feedback]);const clearDrawing=(0,react.useCallback)(()=>{canvasRef.current&&canvasRef.current.clear()},[]),undoLastDrawing=(0,react.useCallback)(()=>{canvasRef.current&&canvasRef.current.undo()},[]),formik=(0,formik_esm.Wx)({initialValues:{feedbackType:"",description:""},validationSchema,onSubmit:async values=>{try{let drawings=null;if(canvasRef.current){const drawingsData=canvasRef.current.getSaveData();drawings=drawingsData?JSON.parse(drawingsData):null}const payload={feedbackType:values.feedbackType,description:values.description,image,drawings};await axios.A.put(`${editingUrl}/${feedback.id}`,payload,{headers:additionalHeaders}),dist.Ay.success("Feedback updated successfully!"),onUpdate&&onUpdate(feedback.id)}catch(error){console.error("Error saving feedback:",error),dist.Ay.error("Failed to save feedback. Please try again.")}}});return(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:3},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"h4",gutterBottom:!0,children:"Edit Feedback"}),(0,jsx_runtime.jsxs)(Box.A,{sx:{display:"flex",flexDirection:"row",gap:3,mt:3},children:[(0,jsx_runtime.jsxs)(Box.A,{sx:{flex:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"h6",gutterBottom:!0,children:"Screenshot with Drawing"}),(0,jsx_runtime.jsxs)(Box.A,{sx:{bgcolor:"#f5f5f5",p:2,borderRadius:1},children:[image?(0,jsx_runtime.jsx)(Box.A,{sx:{width:"100%",display:"flex",alignItems:"center",justifyContent:"center",position:"relative"},children:(0,jsx_runtime.jsxs)(Box.A,{sx:{position:"relative",width:dimensions.width,height:dimensions.height},children:[(0,jsx_runtime.jsx)("img",{src:image,alt:"Screenshot",style:{width:"100%",height:"100%",objectFit:"contain",display:"block",position:"absolute",top:0,left:0,zIndex:1}}),(0,jsx_runtime.jsx)(Box.A,{sx:{position:"absolute",top:0,left:0,width:"100%",height:"100%",zIndex:2,pointerEvents:"auto"},children:(0,jsx_runtime.jsx)(CanvasDraw,{ref:canvasRef,canvasWidth:dimensions.width,canvasHeight:dimensions.height,brushColor:"#ff0000",brushRadius:5,lazyRadius:0,hideGrid:!0,saveData:savedDrawingData||"",backgroundColor:"transparent",immediateLoading:!0})})]})}):(0,jsx_runtime.jsx)(Box.A,{sx:{width:"100%",height:400,display:"flex",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsx)(Typography.A,{color:"text.secondary",children:"No screenshot available"})}),(0,jsx_runtime.jsxs)(Box.A,{sx:{mt:2,display:"flex",gap:2},children:[(0,jsx_runtime.jsx)(Button.A,{variant:"contained",color:"secondary",onClick:clearDrawing,children:"Reset Drawing"}),(0,jsx_runtime.jsx)(Button.A,{variant:"contained",color:"primary",onClick:undoLastDrawing,children:"Undo"})]})]})]}),(0,jsx_runtime.jsxs)(Box.A,{sx:{flex:1},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"h6",gutterBottom:!0,children:"Feedback Details"}),(0,jsx_runtime.jsxs)("form",{onSubmit:formik.handleSubmit,children:[(0,jsx_runtime.jsxs)(FormControl.A,{fullWidth:!0,margin:"normal",children:[(0,jsx_runtime.jsx)(InputLabel.A,{id:"feedbackType-label",children:"Feedback Type"}),(0,jsx_runtime.jsxs)(Select.A,{labelId:"feedbackType-label",id:"feedbackType",name:"feedbackType",value:formik.values.feedbackType,onChange:formik.handleChange,error:formik.touched.feedbackType&&Boolean(formik.errors.feedbackType),label:"Feedback Type",children:[(0,jsx_runtime.jsx)(MenuItem.A,{value:"bug",children:"Bug"}),(0,jsx_runtime.jsx)(MenuItem.A,{value:"feature",children:"Feature Request"}),(0,jsx_runtime.jsx)(MenuItem.A,{value:"other",children:"Other"})]}),formik.touched.feedbackType&&formik.errors.feedbackType&&(0,jsx_runtime.jsx)(Box.A,{sx:{color:"error.main",fontSize:"0.75rem",mt:.5},children:formik.errors.feedbackType})]}),(0,jsx_runtime.jsx)(TextField.A,{fullWidth:!0,margin:"normal",id:"description",name:"description",label:"Description",multiline:!0,rows:8,value:formik.values.description,onChange:formik.handleChange,error:formik.touched.description&&Boolean(formik.errors.description),helperText:formik.touched.description&&formik.errors.description}),(0,jsx_runtime.jsxs)(Box.A,{sx:{mt:3,display:"flex",gap:2},children:[(0,jsx_runtime.jsx)(Button.A,{color:"primary",variant:"contained",fullWidth:!0,type:"submit",children:"Update Feedback"}),(0,jsx_runtime.jsx)(Button.A,{color:"inherit",variant:"outlined",fullWidth:!0,onClick:()=>onCancel&&onCancel(),children:"Cancel"})]})]})]})]})]})}DesktopEditFeedbackComponent.__docgenInfo={description:"",methods:[],displayName:"DesktopEditFeedbackComponent",props:{feedback:{required:!0,tsType:{name:"any"},description:""},onUpdate:{required:!1,tsType:{name:"signature",type:"function",raw:"(feedbackId: string) => void",signature:{arguments:[{type:{name:"string"},name:"feedbackId"}],return:{name:"void"}}},description:""},onCancel:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},editingUrl:{required:!0,tsType:{name:"string"},description:""},additionalHeaders:{required:!1,tsType:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>"},description:"",defaultValue:{value:"{}",computed:!1}}}};var handlers=__webpack_require__("./src/mocks/handlers.ts");const DesktopEditFeedbackComponent_stories={title:"Material/DesktopEditFeedbackComponent",component:DesktopEditFeedbackComponent,parameters:{layout:"fullscreen",msw:{handlers:handlers.Y}},tags:["autodocs"],argTypes:{feedback:{control:"object",description:"Feedback object to edit"},editingUrl:{control:"text",description:"Base URL for edit operations. feedbackId will be appended automatically"},additionalHeaders:{control:"object",description:"Additional headers for API requests"},onUpdate:{action:"update-clicked",description:"Callback when feedback is updated"},onCancel:{action:"cancel-clicked",description:"Callback when editing is cancelled"}}},Default={args:{feedback:handlers.q[0],editingUrl:"",additionalHeaders:{}}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    feedback: mockFeedbackItems[0],\n    editingUrl: '',\n    additionalHeaders: {}\n  }\n}",...Default.parameters?.docs?.source},description:{story:"Default desktop edit view with screenshot and drawings using mockFeedbackItems[0].\nSide-by-side layout with screenshot annotation on the left and form on the right.",...Default.parameters?.docs?.description}}}}}]);